# Build stage
FROM node:22-alpine AS builder
WORKDIR /app

# Instalar pnpm globalmente
RUN npm install -g pnpm

# Copiar archivos de dependencias
COPY package.json pnpm-lock.yaml ./

# Instalar dependencias
RUN pnpm install --frozen-lockfile

# Copiar código fuente
COPY . .

# Build de la aplicación
RUN pnpm run build:coolify:working

# Production stage
FROM node:22-alpine AS runner
WORKDIR /app

# Instalar pnpm globalmente
RUN npm install -g pnpm

# Configurar variables de entorno
ENV NODE_ENV=production
ENV PORT=4321

# Copiar archivos necesarios del build
COPY --from=builder /app/package.json ./
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/public ./public
COPY --from=builder /app/astro.config.coolify.working.mjs ./astro.config.mjs
COPY --from=builder /app/tsconfig.json ./
COPY --from=builder /app/tailwind.config.mjs ./
COPY --from=builder /app/colors.css ./

# Exponer puerto
EXPOSE 4321

# Comando de inicio
CMD ["pnpm", "run", "start:coolify"]
