---
import FormattedDate from './FormattedDate.astro';
import ReadingTime from './ReadingTime.astro';

interface Props {
  entry: any;
  class?: string;
}

const { entry, class: className = '' } = Astro.props;
---

<article class={`bg-gray-100 rounded-2xl shadow-lg overflow-hidden ${className}`}>
  <!-- Imagen del artículo -->
  <div class="w-full">
    {entry.data.cover && (
      <img
        src={entry.data.cover.src || entry.data.cover}
        alt={entry.data.coverAlt || entry.data.title}
        width="600"
        height="400"
        class="w-full h-64 object-cover"
        loading="lazy"
      />
    )}
  </div>

  <!-- Contenido de la tarjeta -->
  <div class="p-6 bg-white">
    <!-- Título del artículo -->
    <h2 class="mb-4 text-2xl font-bold tracking-tight text-gray-900 dark:text-white">
      <a href={`/blog/${entry.data.slug}`} class="hover:text-primary transition-colors">
        {entry.data.title}
      </a>
    </h2>

    <!-- Línea divisoria -->
    <div class="w-4/5 h-px bg-gray-200 mx-auto mb-6"></div>

    <!-- Metadatos del artículo -->
    <div class="flex justify-between items-start mb-6">
      <!-- Lado izquierdo - Información del autor -->
      <div class="flex items-center space-x-3">
        <img
          src={entry.data.author.image.src || entry.data.author.image}
          alt={`Avatar de ${entry.data.author.name}`}
          width="40"
          height="40"
          class="w-10 h-10 rounded-full"
        />
        <div>
          <span class="font-semibold text-gray-900 dark:text-white">
            {entry.data.author.name}
          </span>
          <!-- Aquí podrías agregar iconos de redes sociales si los tienes -->
        </div>
      </div>

      <!-- Lado derecho - Información del artículo -->
      <div class="flex flex-col items-end space-y-2">
        <!-- Categoría -->
        <span class="bg-purple-100 text-purple-800 text-xs font-medium px-2.5 py-0.5 rounded-full">
          {entry.data.category}
        </span>
        
        <!-- Fecha y tiempo de lectura -->
        <div class="flex items-center space-x-4 text-sm text-gray-500">
          <div class="flex items-center space-x-1">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
            <FormattedDate date={entry.data.pubDate} />
          </div>
          <ReadingTime content={entry.body} />
        </div>
      </div>
    </div>

    <!-- Segunda línea divisoria -->
    <div class="w-4/5 h-px bg-gray-200 mx-auto mb-4"></div>

    <!-- Tags -->
    {entry.data.tags && entry.data.tags.length > 0 && (
      <div class="flex flex-wrap gap-2">
        {entry.data.tags.map((tag: string) => (
          <a
            href={`/blog?tag=${encodeURIComponent(tag)}`}
            class="text-xs px-2 py-1 rounded border border-gray-200 bg-gray-100 text-gray-600 hover:bg-primary-100 hover:text-primary transition"
            style="text-decoration: none;"
          >
            #{tag}
          </a>
        ))}
      </div>
    )}
  </div>
</article> 