---
import Button from '../common/Button.astro';
import Input from '../common/Input.astro';
import Textarea from '../common/Textarea.astro';
import dotenv from 'dotenv';

dotenv.config();

const RECAPTCHA_SITE_KEY =
  process.env.RECAPTCHA_SITE_KEY || import.meta.env.RECAPTCHA_SITE_KEY;
---

<form id="contact-form" class="space-y-6" method="post" autocomplete="off">
  <Input
    id="name"
    name="name"
    label="Nombre"
    required={true}
    autoComplete="name"
  />
  <Input
    id="email"
    name="email"
    label="Correo electrónico"
    type="email"
    required={true}
    autoComplete="email"
  />
  <Input id="phone" name="phone" label="Teléfono" type="tel" />
  <Input id="company" name="company" label="Empresa" />
  <Textarea
    id="message"
    name="message"
    label="Mensaje"
    required={true}
    rows={4}
  />
  <input type="hidden" id="g-recaptcha-response" name="g-recaptcha-response" />
  <Button
    text="Enviar mensaje"
    variant="primary"
    type="submit"
    id="submit-btn"
  />
  <div id="form-success" class="hidden text-green-600 mt-4 font-semibold">
    ¡Mensaje enviado con éxito! Pronto nos pondremos en contacto contigo.
  </div>
  <div id="form-error" class="hidden text-red-600 mt-4 font-semibold">
    Ocurrió un error al enviar el mensaje. Intenta nuevamente.
  </div>
</form>

<!-- Cargar el script de reCAPTCHA v3 global -->
<script
  src={`https://www.google.com/recaptcha/api.js?render=${RECAPTCHA_SITE_KEY}`}
  defer
  is:inline></script>
<script is:inline>
  const contactForm = document.getElementById('contact-form');
  const submitBtn = document.getElementById('submit-btn');
  const successMsg = document.getElementById('form-success');
  const errorMsg = document.getElementById('form-error');
  const recaptchaSiteKey = RECAPTCHA_SITE_KEY;

  contactForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    console.log('Iniciando envío del formulario');
    console.log('Formulario encontrado:', contactForm);
    console.log('reCAPTCHA disponible:', typeof grecaptcha !== 'undefined');

    successMsg?.classList.add('hidden');
    errorMsg?.classList.add('hidden');
    if (submitBtn) {
      submitBtn.disabled = true;
      submitBtn.textContent = 'Enviando...';
    }
    try {
      // Obtener el token de reCAPTCHA v3
      console.log('Intentando obtener token reCAPTCHA...');
      const token = await grecaptcha.execute(recaptchaSiteKey, {
        action: 'submit',
      });
      console.log('Token reCAPTCHA obtenido:', token);

      document.getElementById('g-recaptcha-response').value = token;
      const formData = new FormData(contactForm);
      const data = Object.fromEntries(formData.entries());
      console.log('Datos del formulario:', data);

      console.log('Enviando petición a /api/send-email...');
      const res = await fetch('/api/send-email', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data),
      });
      console.log('Respuesta del servidor:', res);
      console.log('Status:', res.status);

      const responseData = await res.text();
      console.log('Datos de respuesta:', responseData);

      if (res.ok) {
        contactForm.reset();
        successMsg?.classList.remove('hidden');
      } else {
        console.error(
          'Error en respuesta del servidor:',
          res.status,
          responseData
        );
        errorMsg?.classList.remove('hidden');
      }
    } catch (err) {
      console.error('Error en fetch:', err);
      errorMsg?.classList.remove('hidden');
    } finally {
      if (submitBtn) {
        submitBtn.disabled = false;
        submitBtn.textContent = 'Enviar mensaje';
      }
    }
  });
</script>
