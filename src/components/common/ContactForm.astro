---
import type { ContactFormData } from "../../lib/types/contact";

interface Props {
  onSubmit?: (data: ContactFormData) => void;
}

const { onSubmit } = Astro.props;
---

<form id="contactForm" class="bg-white p-8 rounded-lg shadow-md">
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
    <div>
      <label for="nombre" class="block text-gray-700 font-medium mb-2"
        >Nombre *</label
      >
      <input
        type="text"
        id="nombre"
        name="nombre"
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
        placeholder="Tu nombre"
        required
      />
    </div>
    <div>
      <label for="email" class="block text-gray-700 font-medium mb-2"
        >Email *</label
      >
      <input
        type="email"
        id="email"
        name="email"
        class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
        placeholder="Tu correo electrónico"
        required
      />
    </div>
  </div>
  <div class="mb-4">
    <label for="empresa" class="block text-gray-700 font-medium mb-2"
      >Empresa (opcional)</label
    >
    <input
      type="text"
      id="empresa"
      name="empresa"
      class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
      placeholder="Nombre de tu empresa"
    />
  </div>
  <div class="mb-4">
    <label for="telefono" class="block text-gray-700 font-medium mb-2"
      >Teléfono *</label
    >
    <div class="relative">
      <div
        class="absolute inset-y-0 start-0 top-0 flex items-center ps-3.5 pointer-events-none"
      >
        <svg
          class="w-4 h-4 text-gray-500 dark:text-gray-400"
          aria-hidden="true"
          xmlns="http://www.w3.org/2000/svg"
          fill="currentColor"
          viewBox="0 0 19 18"
        >
          <path
            d="M18 13.446a3.02 3.02 0 0 0-.946-1.985l-1.4-1.4a3.054 3.054 0 0 0-4.218 0l-.7.7a.983.983 0 0 1-1.39 0l-2.1-2.1a.983.983 0 0 1 0-1.389l.7-.7a2.98 2.98 0 0 0 0-4.217l-1.4-1.4a2.824 2.824 0 0 0-4.218 0c-3.619 3.619-3 8.229 1.752 12.979C6.785 16.639 9.45 18 11.912 18a7.175 7.175 0 0 0 5.139-2.325A2.9 2.9 0 0 0 18 13.446Z"
          ></path>
        </svg>
      </div>
      <input
        type="tel"
        id="telefono"
        name="telefono"
        class="w-full px-10 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
        placeholder="###-###-####"
      />
    </div>
  </div>
  <div class="mb-6">
    <label for="mensaje" class="block text-gray-700 font-medium mb-2"
      >Mensaje *</label
    >
    <textarea
      id="mensaje"
      name="mensaje"
      rows="5"
      class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500"
      placeholder="Escribe tu mensaje aquí"
      required></textarea>
  </div>
  <button
    type="submit"
    class="w-full bg-[#E51F52] hover:bg-[#c71a48] text-white font-bold py-3 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-300"
    >Enviar mensaje</button
  >
</form>

<script define:vars={{ onSubmit: onSubmit?.toString() }}>
  const form = document.getElementById("contactForm");
  const onSubmit = window.onSubmit
    ? eval("(" + window.onSubmit + ")")
    : undefined;

  if (form) {
    form.addEventListener("submit", async (event) => {
      event.preventDefault();

      const nombreInput = document.getElementById("nombre") as HTMLInputElement;
      const emailInput = document.getElementById("email") as HTMLInputElement;
      const telefonoInput = document.getElementById(
        "telefono"
      ) as HTMLInputElement;
      const empresaInput = document.getElementById(
        "empresa"
      ) as HTMLInputElement;
      const mensajeInput = document.getElementById(
        "mensaje"
      ) as HTMLTextAreaElement;

      const data: ContactFormData = {
        name: nombreInput.value,
        email: emailInput.value,
        phone: telefonoInput.value,
        company: empresaInput.value,
        message: mensajeInput.value,
      };

      try {
        const response = await fetch("/api/send-email", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify(data),
        });

        if (!response.ok) {
          const errorData = await response.json();
          throw new Error(errorData.error || "Error al enviar el correo");
        }

        alert("Mensaje enviado correctamente");
        form.reset();
      } catch (error) {
        console.error(error);
        alert(
          error.message ||
            "Error al enviar el mensaje. Por favor, inténtalo de nuevo más tarde."
        );
      }
    });
  }

  delete window.onSubmit;
</script>
