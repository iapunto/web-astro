---
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import { getCollection } from 'astro:content';
import { CMSLayout } from '../../components/cms/CMSLayout';
import { ArticleList } from '../../components/cms/ArticleList';
import { ArticleEditor } from '../../components/cms/ArticleEditor';
import { BlogArticle } from '../../lib/types/cms';

// Obtener todos los artículos del blog
const blogEntries = await getCollection('blog');

// Convertir a formato BlogArticle
const articles: BlogArticle[] = blogEntries.map(entry => ({
  id: entry.slug,
  title: entry.data.title,
  slug: entry.data.slug,
  pubDate: entry.data.pubDate,
  description: entry.data.description,
  cover: entry.data.cover,
  coverAlt: entry.data.coverAlt,
  author: entry.data.author,
  category: entry.data.category,
  subcategory: entry.data.subcategory,
  tags: entry.data.tags || [],
  quote: entry.data.quote,
  content: entry.body,
  status: 'published' as const,
  createdAt: entry.data.pubDate,
  updatedAt: entry.data.pubDate
}));
---

<DefaultLayout
  pageTitle="Gestión de Artículos - IA Punto CMS"
  description="Administrar artículos del blog"
  noindex={true}
>
  <div id="cms-root" data-articles={JSON.stringify(articles)}></div>
</DefaultLayout>

<script>
  import { createRoot } from 'react-dom/client';
  import { CMSLayout } from '../../components/cms/CMSLayout';
  import { ArticleList } from '../../components/cms/ArticleList';
  import { ArticleEditor } from '../../components/cms/ArticleEditor';
  import { useState } from 'react';

  const ArticlesPage = () => {
    const [articles, setArticles] = useState([]);
    const [editingArticle, setEditingArticle] = useState(null);
    const [showEditor, setShowEditor] = useState(false);

    // Cargar artículos desde el servidor
    React.useEffect(() => {
      const cmsRoot = document.getElementById('cms-root');
      if (cmsRoot) {
        const serverArticles = JSON.parse(cmsRoot.dataset.articles || '[]');
        setArticles(serverArticles);
      }
    }, []);

    const handleEdit = (article) => {
      setEditingArticle(article);
      setShowEditor(true);
    };

    const handleDelete = (id) => {
      if (confirm('¿Estás seguro de que quieres eliminar este artículo?')) {
        setArticles(prev => prev.filter(a => a.id !== id));
      }
    };

    const handlePublish = (id) => {
      setArticles(prev => prev.map(a => 
        a.id === id ? { ...a, status: 'published' } : a
      ));
    };

    const handleSave = (article) => {
      if (editingArticle) {
        setArticles(prev => prev.map(a => a.id === article.id ? article : a));
      } else {
        setArticles(prev => [...prev, article]);
      }
      setShowEditor(false);
      setEditingArticle(null);
    };

    const handleCancel = () => {
      setShowEditor(false);
      setEditingArticle(null);
    };

    if (showEditor) {
      return (
        <CMSLayout>
          <div className="h-full">
            <ArticleEditor
              article={editingArticle}
              onSave={handleSave}
              onCancel={handleCancel}
            />
          </div>
        </CMSLayout>
      );
    }

    return (
      <CMSLayout>
        <div className="p-6">
          <div className="mb-6 flex justify-between items-center">
            <h1 className="text-2xl font-bold text-gray-900">Gestión de Artículos</h1>
            <button
              onClick={() => setShowEditor(true)}
              className="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
            >
              Nuevo Artículo
            </button>
          </div>
          <ArticleList
            articles={articles}
            onEdit={handleEdit}
            onDelete={handleDelete}
            onPublish={handlePublish}
          />
        </div>
      </CMSLayout>
    );
  };

  const cmsRoot = document.getElementById('cms-root');
  if (cmsRoot) {
    const root = createRoot(cmsRoot);
    root.render(<ArticlesPage />);
  }
</script> 