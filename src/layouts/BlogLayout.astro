---
// src/layouts/BlogLayout.astro
// Layout para posts de blog que extiende BaseLayout

import BaseLayout from './BaseLayout.astro';
import FormattedDate from '@components/common/FormattedDate.astro';
import ReadingTime from '@components/common/ReadingTime.astro';
import { getCollection } from 'astro:content';
import SchemaMarkup from '@components/common/SchemaMarkup.astro';
import RecommendedServices from '@components/common/RecommendedServices.astro';

const { pageTitle, description, keywords, image, author, pubDate, post } =
  Astro.props;

const allPosts = await getCollection('blog');

function getRelatedPosts(currentPost: any) {
  const relatedPosts = allPosts.filter((p: any) => {
    if (p.id === currentPost.id) return false;
    const currentCategories = Array.isArray(currentPost.category)
      ? currentPost.category
      : [currentPost.category];
    const postCategories = Array.isArray(p.category)
      ? p.category
      : [p.category];
    return currentCategories.some((cat: any) => postCategories.includes(cat));
  });
  return relatedPosts
    .sort(
      (a, b) =>
        new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
    )
    .slice(0, 4);
}

const relatedPosts = getRelatedPosts(post);
const hasRelated = relatedPosts && relatedPosts.length > 0;
---

<BaseLayout
  pageTitle={pageTitle}
  description={description}
  keywords={keywords}
  image={image}
  variant="blog"
  showBreadcrumb={true}
  showBackToTop={true}
  showWhatsApp={true}
  showTracking={true}
  showRecaptcha={false}
>
  <slot name="head">
    <SchemaMarkup post={post} />
  </slot>

  <main
    class="pt-8 pb-16 lg:pt-16 lg:pb-24 bg-white dark:bg-gray-900 antialiased overflow-x-hidden"
  >
    <div
      class="w-full max-w-screen-2xl mx-auto px-4 lg:px-8 grid grid-cols-1 lg:grid-cols-12 gap-8"
    >
      {/* Sidebar izquierdo (TOC) */}
      <aside class="hidden lg:block lg:col-span-3">
        <slot name="toc" />
      </aside>
      {/* Contenido principal */}
      <article
        class="col-span-1 lg:col-span-6 w-full prose prose-lg dark:prose-invert mx-auto blog-content overflow-hidden"
      >
        {/* Nueva estructura del artículo con diseño de tarjeta */}
        <div
          class="bg-gray-100 rounded-2xl shadow-lg overflow-hidden mb-8 w-full"
        >
          {/* Imagen de portada */}
          <div class="w-full">
            <img
              src={post.data.cover}
              alt={post.data.coverAlt || pageTitle}
              class="w-full h-64 object-cover"
            />
          </div>

          {/* Contenido de la tarjeta */}
          <div class="p-6 bg-white">
            {/* Título del artículo */}
            <h1
              class="mb-4 text-3xl font-bold tracking-tight text-gray-900 dark:text-white"
            >
              {pageTitle}
            </h1>

            {/* Línea divisoria */}
            <div class="w-4/5 h-px bg-gray-200 mx-auto mb-6"></div>

            {/* Metadatos del artículo */}
            <div class="flex justify-between items-start mb-6">
              {/* Lado izquierdo - Información del autor */}
              <div class="flex items-center space-x-3">
                <img
                  src={author.image.src || author.image}
                  alt={`Avatar de ${author.name}`}
                  width="40"
                  height="40"
                  class="w-10 h-10 rounded-full"
                />
                <div>
                  <span class="font-semibold text-gray-900 dark:text-white">
                    {author.name}
                  </span>
                  {author.description}
                  <br />
                  Tiempo de lectura: <ReadingTime content={post.body} />
                </div>
              </div>

              {/* Lado derecho - Información del artículo */}
              <div class="flex flex-col items-end space-y-2">
                {/* Categoría */}
                {
                  post.data.category && (
                    <span class="bg-purple-100 text-purple-800 text-xs font-medium px-2.5 py-0.5 rounded-full">
                      {post.data.category}
                    </span>
                  )
                }

                {/* Fecha y tiempo de lectura */}
                <div class="flex items-center space-x-4 text-sm text-gray-500">
                  <div class="flex items-center space-x-1">
                    <svg
                      class="w-4 h-4"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                      ></path>
                    </svg>
                    <FormattedDate date={pubDate} />
                  </div>
                </div>
              </div>
            </div>

            {/* Segunda línea divisoria */}
            <div class="w-4/5 h-px bg-gray-200 mx-auto mb-4"></div>

            {/* Tags */}
            {
              post.data.tags && post.data.tags.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  {post.data.tags.map((tag: string) => (
                    <a
                      href={`/blog?tag=${encodeURIComponent(tag)}`}
                      class="text-xs px-2 py-1 rounded border border-gray-200 bg-gray-100 text-gray-600 hover:bg-primary-100 hover:text-primary transition"
                      style="text-decoration: none;"
                    >
                      #{tag}
                    </a>
                  ))}
                </div>
              )
            }
          </div>
        </div>
      </article>
      {/* Encabezado principal del artículo */}
      <h1 class="text-4xl font-bold mb-4 text-gray-900 dark:text-white">
        {pageTitle}
      </h1>
      {
        post.data.tags && post.data.tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mb-6">
            {post.data.tags.map((tag: string) => (
              <a
                href={`/blog?tag=${encodeURIComponent(tag)}`}
                class="text-xs px-2 py-1 rounded border border-gray-200 bg-gray-100 text-gray-600 hover:bg-primary-100 hover:text-primary transition"
                style="text-decoration: none;"
              >
                #{tag}
              </a>
            ))}
          </div>
        )
      }
      <slot />
    </div>
  </main>
  <RecommendedServices />
</BaseLayout>
