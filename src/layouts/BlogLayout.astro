---
import BaseHead from '@components/common/BaseHead.astro';
import NavBar from '@components/layout/Header/Navbar.astro';
import TopBar from '@components/layout/Header/TopBar.astro';
import Footer from '@components/layout/Footer.astro';
import BackToTop from '@components/layout/BackToTop.astro';
import Breadcrumb from '@components/layout/Header/Breadcrumb.astro';
import FormattedDate from '@components/common/FormattedDate.astro';
import { getCollection } from 'astro:content';
import SchemaMarkup from '@components/common/SchemaMarkup.astro';

const { pageTitle, description, keywords, image, author, pubDate, post } =
  Astro.props; // Añade 'post' a las props

const allPosts = await getCollection('blog');

function getRelatedPosts(currentPost: any) {
  const relatedPosts = allPosts.filter((p: any) => {
    // Si el post actual es el post relacionado, no se agrega
    if (p.id === currentPost.id) return false;

    // Si el post actual no tiene categorías, no se agrega
    const currentCategories = Array.isArray(currentPost.category)
      ? currentPost.category
      : [currentPost.category];
    // Si el post relacionado no tiene categorías, no se agrega
    const postCategories = Array.isArray(p.category)
      ? p.category
      : [p.category];
    // Si el post relacionado tiene una categoría que coincide con la del post actual, se agrega
    return currentCategories.some((cat: any) => postCategories.includes(cat));
  });
  // Se ordenan por fecha de publicación (más reciente primero)
  return relatedPosts
    .sort(
      (a, b) =>
        new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
    )
    .slice(0, 4);
}
const relatedPosts = getRelatedPosts(post);
const hasRelated = relatedPosts && relatedPosts.length > 0;
---

<html lang="en">
  <head>
    <BaseHead
      pageTitle={pageTitle}
      description={description}
      keywords={keywords}
      image={image}
    />
    <SchemaMarkup post={post} />
  </head>
  <body>
    <TopBar />
    <NavBar />
    <Breadcrumb pageTitle={pageTitle} />
    <main
      class="pt-8 pb-16 lg:pt-16 lg:pb-24 bg-white dark:bg-gray-900 antialiased"
    >
      <div class="flex justify-between px-4 mx-auto max-w-screen-xl">
        <article
          class="blog-content mx-auto w-full max-w-2xl prose prose-lg dark:prose-invert"
        >
          <img
            src={post.data.cover}
            alt={post.data.coverAlt}
            class="w-full h-auto rounded-lg mb-8"
          />
          <address class="author flex items-center mb-6 not-italic">
            <div
              class="inline-flex items-center mr-3 text-sm text-gray-900 dark:text-white"
            >
              <img
                src={author.image.src || author.image}
                alt={author.name || ''}
                class="mr-6 rounded-full"
                width="96"
                height="96"
              />
              <div class="space-y-1">
                <p class="text-xl font-bold text-gray-900 dark:text-white mb-0">
                  {author.name}
                  {/* Usa author.name */}
                </p>
                <p class="text-base text-gray-500 dark:text-gray-400">
                  {author.description}
                  {/* Usa author.description */}
                </p>
                <p class="text-base text-gray-500 dark:text-gray-400">
                  <FormattedDate date={pubDate} />
                </p>
              </div>
            </div>
          </address>
          <h1
            class="mb-4 text-3xl font-extrabold leading-tight text-gray-900 lg:mb-6 lg:text-4xl dark:text-white"
          >
            {pageTitle}
          </h1>

          <slot />
          {/* Aquí se renderiza el contenido del post */}
        </article>
      </div>
    </main>
    {
      hasRelated && (
        <aside
          aria-label="Related articles"
          class="py-8 lg:py-24 bg-gray-50 dark:bg-gray-800"
        >
          <div class="px-4 mx-auto max-w-screen-xl">
            <h2 class="mb-8 text-2xl font-bold text-gray-900 dark:text-white">
              Artículos relacionados
            </h2>
            <div class="grid gap-12 sm:grid-cols-2 lg:grid-cols-4">
              {relatedPosts.map((related) => {
                return (
                  <article class="max-w-xs">
                    <a href={`/blog/${related.id}`}>
                      <img
                        src={related.data.cover.src || related.data.cover}
                        alt={related.data.title || ''}
                        loading="lazy"
                        class="mb-5 rounded-lg"
                        width="600"
                        height="400"
                      />
                    </a>
                    <h2 class="mb-2 text-xl font-bold leading-tight text-gray-900 dark:text-white">
                      <a href={`/blog/${related.id}`}>{related.data.title}</a>
                    </h2>
                    <p class="mb-4 text-gray-500 dark:text-gray-400">
                      {related.data.description}
                    </p>
                    <a
                      href={`/blog/${related.id}`}
                      class="inline-flex items-center font-medium underline underline-offset-4 text-primary-600 dark:text-primary-500 hover:no-underline"
                    >
                      Leer más...
                    </a>
                  </article>
                );
              })}
            </div>
          </div>
        </aside>
      )
    }
    <Footer />
    <BackToTop />
  </body>
</html>
